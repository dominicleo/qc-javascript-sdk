const e=100003,t="请确认 JSSDK 名称.",n=100004,s="JSSDK %s 响应超时",o=100005,r="JSBridge 不受支持.",c=100006,i="请确认 JSSDK 参数类型",a="undefined"!=typeof window;function l(e){return e instanceof Function}function d(e){if("object"!=typeof e||null===e)return!1;let t=e;for(;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}class u extends Error{constructor(e,t){super(e),this.code=null,this.name="SDKError",this.message=e,t&&(this.code=t)}}const w={debug:!1,timeout:1e4,timeoutExclude:["Moxiecert","watchShake","jump","faceplusplus","getAccessToken","registerCallback","resumeEvent","uploadImage","getWldData"],responseSuccessCode:0};function p(e){if(d(e))return e;try{return JSON.parse(e)}catch{return{}}}class S{constructor(e){this.id=1,this.options=w,this.options=Object.assign(this.options,S.defaults,e)}call(w,f){const{responseSuccessCode:m,timeout:g,timeoutExclude:h=[],transformRequest:J}=this.options,b=function(){if(!a)return!1;const e=!!(window&&window.webkit&&window.webkit.messageHandlers&&window.webkit.messageHandlers.QCJSInterface&&window.webkit.messageHandlers.QCJSInterface.postMessage)&&window.webkit.messageHandlers.QCJSInterface.postMessage;if(l(e))return t=>{e(JSON.parse(JSON.stringify(t)))};const t=!!(window&&window.QCJSInterface&&window.QCJSInterface.callApp)&&window.QCJSInterface.callApp;return!!l(t)&&(e=>{t(JSON.stringify(e))})}();return w?f&&!d(f)?Promise.reject(new u(i,c)):l(b)?new Promise((e,t)=>{const o=this.callbackid(w),r={method:w,params:f,callback:o},{callback:c}=f||{};h.includes(w)||(S.timer[o]=setTimeout(()=>(l(S.cache[o])&&delete S.cache[o],t(new u(s.replace("%s",w),n))),g)),S.cache[o]=n=>{const s=p(n);return S.timer[o]&&clearTimeout(S.timer[o]),l(c)&&c(s),(s.code===m?e:t)(s)},l(J)&&(r.params=J(r.params,w)),b(r)}):Promise.reject(new u(r,o)):Promise.reject(new u(t,e))}track(e,t){return(new S).call(e,t)}callbackid(e){return["JSSDK",e,+new Date,++this.id].join("_")}logger(e){const t=(new Date).toTimeString().replace(/.*(\d{2}:\d{2}:\d{2}).*/,"$1");this.options.debug&&console.log(`JSSDK [${t}]`,e)}static appCallback(e){const t=p(e),{callbackid:n,data:s}=t,o=S.cache[n];l(o)&&o({...s})}}S.defaults=w,S.cache={},S.timer={},a&&(window.QCJSAPI||(window.QCJSAPI=S),window.QCJSSDK||(window.QCJSSDK=S));export default S;export{u as SDKError};
